<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Marco的杂货铺]]></title>
  <link href="http://marcofeng.com/atom.xml" rel="self"/>
  <link href="http://marcofeng.com/"/>
  <updated>2015-09-11T16:31:30+08:00</updated>
  <id>http://marcofeng.com/</id>
  <author>
    <name><![CDATA[Marco Feng]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[手机号码和价格金额有效性判断]]></title>
    <link href="http://marcofeng.com/blog/20150911/shou-ji-hao-ma-he-jie-ge-jin-e-you-xiao-xing-pan-duan.html/"/>
    <updated>2015-09-11T16:29:32+08:00</updated>
    <id>http://marcofeng.com/blog/20150911/shou-ji-hao-ma-he-jie-ge-jin-e-you-xiao-xing-pan-duan</id>
    <content type="html"><![CDATA[<p>在实际开发过程中，经常会遇到些不能让用户随便地输入手机号码，对输入的手机号码的正确判断；有些输入框只能输入数字，不能输入字母或特殊字符；还有些如价格金额之类的就只能输入数字和小数点且小数点后面保留两位。
{ % coderay [lang:objc] % }
// 手机号码的有效性判断</p>

<ul>
  <li>(BOOL)isMobileNumber:(NSString *)mobileNum<br />
{<br />
  /**
    <ul>
      <li>手机号码</li>
      <li>移动：134[0-8],135,136,137,138,139,150,151,157,158,159,182,187,188</li>
      <li>联通：130,131,132,152,155,156,185,186</li>
      <li>电信：133,1349,153,180,189<br />
   */<br />
  NSString * MOBILE = @”^1(3[0-9]|5[0-35-9]|8[025-9])\d{8}$”;<br />
  /**<br />
   10         * 中国移动：China Mobile<br />
   11         * 134[0-8],135,136,137,138,139,150,151,157,158,159,182,187,188<br />
   12         */<br />
  NSString * CM = @”^1(34[0-8]|(3[5-9]|5[017-9]|8[278])\d)\d{7}$”;<br />
  /**<br />
   15         * 中国联通：China Unicom<br />
   16         * 130,131,132,152,155,156,185,186<br />
   17         */<br />
  NSString * CU = @”^1(3[0-2]|5[256]|8[56])\d{8}$”;<br />
  /**<br />
   20         * 中国电信：China Telecom<br />
   21         * 133,1349,153,180,189<br />
   22         */<br />
  NSString * CT = @”^1((33|53|8[09])[0-9]|349)\d{7}$”;<br />
  /**<br />
   25         * 大陆地区固话及小灵通<br />
   26         * 区号：010,020,021,022,023,024,025,027,028,029<br />
   27         * 号码：七位或八位<br />
   28         */<br />
  // NSString * PHS = @”^0(10|2[0-5789]|\d{3})\d{7,8}$”;<br />
  /**<br />
   29         * 国际长途中国区(+86)<br />
   30         * 区号：+86<br />
   31         * 号码：十一位<br />
   32         */<br />
   NSString * IPH = @”^\+861(3|5|8)\d{9}$”;</li>
    </ul>

    <p>NSPredicate *regextestmobile = [NSPredicate predicateWithFormat:@”SELF MATCHES %@”, MOBILE];<br />
  NSPredicate *regextestcm = [NSPredicate predicateWithFormat:@”SELF MATCHES %@”, CM];<br />
  NSPredicate *regextestcu = [NSPredicate predicateWithFormat:@”SELF MATCHES %@”, CU];<br />
  NSPredicate *regextestct = [NSPredicate predicateWithFormat:@”SELF MATCHES %@”, CT];<br />
  NSPredicate *regextestiph = [NSPredicate predicateWithFormat:@”SELF MATCHES %@”, IPH];<br />
  if (([regextestmobile evaluateWithObject:mobileNum] == YES)<br />
      || ([regextestcm evaluateWithObject:mobileNum] == YES)<br />
      || ([regextestct evaluateWithObject:mobileNum] == YES)<br />
      || ([regextestcu evaluateWithObject:mobileNum] == YES)<br />
      || ([regextestiph evaluateWithObject:mobileNum] == YES))<br />
  {<br />
      return YES;<br />
  }<br />
  else<br />
  {<br />
      return NO;<br />
  }<br />
}</p>
  </li>
</ul>

<p>[html] view plaincopy 
//////// 特殊字符的限制输入，价格金额的有效性判断<br />
#define myDotNumbers     @”0123456789.\n”<br />
#define myNumbers        @”+0123456789\n”</p>

<p>-(void) createTextFiled {</p>

<pre><code>textfield1_ = [[UITextField alloc] initWithFrame:CGRectMake(0, 0, 110, 20)];  
textfield1_.delegate = self;  
textfield1_.text=@"";  
textfield1_.keyboardType=UIKeyboardTypePhonePad;  
textfield1_.textColor=[UIColor redColor];  
textfield1_.backgroundColor=[UIColor whiteColor];  
[self.view addSubview:textfield1_];  
[textfield1_ release];  
  
textfield2_ = [[UITextField alloc] initWithFrame:CGRectMake(110, 0, 80, 20)];  
textfield2_.delegate = self;  
textfield2_.text=@"11";  
[self.view addSubview:textfield2_];  
[textfield2_ release];  
  
textfield3_ = [[UITextField alloc] initWithFrame:CGRectMake(200, 0, 100, 20)];  
textfield3_.delegate = self;  
textfield3_.text=@"22";  
[self.view addSubview:textfield3_];  
[textfield3_ release];   }  
</code></pre>

<p>-(void)showMyMessage:(NSString*)aInfo {</p>

<pre><code>UIAlertView *alertView = [[UIAlertView alloc] initWithTitle:@"提示"  
                                                    message:aInfo  
                                                   delegate:self  
                                          cancelButtonTitle:@"确定"  
                                          otherButtonTitles:nil, nil];  
[alertView show];  
[alertView release];   }  
</code></pre>

<ul>
  <li>
    <p>(BOOL)textField:(UITextField *)textField shouldChangeCharactersInRange:(NSRange)range replacementString:(NSString *)string {<br />
  NSCharacterSet *cs;<br />
  if ([textField isEqual:textfield1_]) {<br />
      cs = [[NSCharacterSet characterSetWithCharactersInString:myNumbers] invertedSet];<br />
      NSString *filtered = [[string componentsSeparatedByCharactersInSet:cs] componentsJoinedByString:@””];<br />
      BOOL basicTest = [string isEqualToString:filtered];<br />
      if (!basicTest) {<br />
          [self showMyMessage:@”只能输入数字”];<br />
          return NO;<br />
      }<br />
  }<br />
  else if ([textField isEqual:textfield2_]) {<br />
      cs = [[NSCharacterSet characterSetWithCharactersInString:myNumbers] invertedSet];<br />
      NSString *filtered = [[string componentsSeparatedByCharactersInSet:cs] componentsJoinedByString:@””];<br />
      BOOL basicTest = [string isEqualToString:filtered];<br />
      if (!basicTest) {<br />
          [self showMyMessage:@”只能输入数字”];<br />
          return NO;<br />
      }<br />
  }<br />
  else if ([textField isEqual:textfield3_]) {<br />
      NSUInteger nDotLoc = [textField.text rangeOfString:@”.”].location;<br />
      if (NSNotFound == nDotLoc &amp;&amp; 0 != range.location) {<br />
          cs = [[NSCharacterSet characterSetWithCharactersInString:myDotNumbers] invertedSet];<br />
      }<br />
      else {<br />
          cs = [[NSCharacterSet characterSetWithCharactersInString:myNumbers] invertedSet];<br />
      }<br />
      NSString *filtered = [[string componentsSeparatedByCharactersInSet:cs] componentsJoinedByString:@””];<br />
      BOOL basicTest = [string isEqualToString:filtered];<br />
      if (!basicTest) {</p>

    <pre><code>      [self showMyMessage:@"只能输入数字和小数点"];  
      return NO;  
  }  
  if (NSNotFound != nDotLoc &amp;&amp; range.location &gt; nDotLoc + 3) {  
      [self showMyMessage:@"小数点后最多三位"];  
      return NO;  
  }     }     return YES;   } { % endcoderay % }
</code></pre>
  </li>
</ul>
]]></content>
  </entry>
  
</feed>
